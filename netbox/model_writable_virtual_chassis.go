/*
NetBox API

API to access NetBox

API version: 2.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
)

// WritableVirtualChassis struct for WritableVirtualChassis
type WritableVirtualChassis struct {
	Id *int32 `json:"id,omitempty"`
	Url *string `json:"url,omitempty"`
	Display *string `json:"display,omitempty"`
	Name string `json:"name"`
	Domain *string `json:"domain,omitempty"`
	Master NullableInt32 `json:"master,omitempty"`
	Tags []NestedTag `json:"tags,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	MemberCount *int32 `json:"member_count,omitempty"`
}

// NewWritableVirtualChassis instantiates a new WritableVirtualChassis object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWritableVirtualChassis(name string) *WritableVirtualChassis {
	this := WritableVirtualChassis{}
	this.Name = name
	return &this
}

// NewWritableVirtualChassisWithDefaults instantiates a new WritableVirtualChassis object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWritableVirtualChassisWithDefaults() *WritableVirtualChassis {
	this := WritableVirtualChassis{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WritableVirtualChassis) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableVirtualChassis) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WritableVirtualChassis) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *WritableVirtualChassis) SetId(v int32) {
	o.Id = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *WritableVirtualChassis) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableVirtualChassis) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *WritableVirtualChassis) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *WritableVirtualChassis) SetUrl(v string) {
	o.Url = &v
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *WritableVirtualChassis) GetDisplay() string {
	if o == nil || o.Display == nil {
		var ret string
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableVirtualChassis) GetDisplayOk() (*string, bool) {
	if o == nil || o.Display == nil {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *WritableVirtualChassis) HasDisplay() bool {
	if o != nil && o.Display != nil {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given string and assigns it to the Display field.
func (o *WritableVirtualChassis) SetDisplay(v string) {
	o.Display = &v
}

// GetName returns the Name field value
func (o *WritableVirtualChassis) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WritableVirtualChassis) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WritableVirtualChassis) SetName(v string) {
	o.Name = v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *WritableVirtualChassis) GetDomain() string {
	if o == nil || o.Domain == nil {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableVirtualChassis) GetDomainOk() (*string, bool) {
	if o == nil || o.Domain == nil {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *WritableVirtualChassis) HasDomain() bool {
	if o != nil && o.Domain != nil {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *WritableVirtualChassis) SetDomain(v string) {
	o.Domain = &v
}

// GetMaster returns the Master field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableVirtualChassis) GetMaster() int32 {
	if o == nil || o.Master.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Master.Get()
}

// GetMasterOk returns a tuple with the Master field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableVirtualChassis) GetMasterOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Master.Get(), o.Master.IsSet()
}

// HasMaster returns a boolean if a field has been set.
func (o *WritableVirtualChassis) HasMaster() bool {
	if o != nil && o.Master.IsSet() {
		return true
	}

	return false
}

// SetMaster gets a reference to the given NullableInt32 and assigns it to the Master field.
func (o *WritableVirtualChassis) SetMaster(v int32) {
	o.Master.Set(&v)
}
// SetMasterNil sets the value for Master to be an explicit nil
func (o *WritableVirtualChassis) SetMasterNil() {
	o.Master.Set(nil)
}

// UnsetMaster ensures that no value is present for Master, not even an explicit nil
func (o *WritableVirtualChassis) UnsetMaster() {
	o.Master.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *WritableVirtualChassis) GetTags() []NestedTag {
	if o == nil || o.Tags == nil {
		var ret []NestedTag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableVirtualChassis) GetTagsOk() ([]NestedTag, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *WritableVirtualChassis) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []NestedTag and assigns it to the Tags field.
func (o *WritableVirtualChassis) SetTags(v []NestedTag) {
	o.Tags = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *WritableVirtualChassis) GetCustomFields() map[string]interface{} {
	if o == nil || o.CustomFields == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableVirtualChassis) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || o.CustomFields == nil {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *WritableVirtualChassis) HasCustomFields() bool {
	if o != nil && o.CustomFields != nil {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *WritableVirtualChassis) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetMemberCount returns the MemberCount field value if set, zero value otherwise.
func (o *WritableVirtualChassis) GetMemberCount() int32 {
	if o == nil || o.MemberCount == nil {
		var ret int32
		return ret
	}
	return *o.MemberCount
}

// GetMemberCountOk returns a tuple with the MemberCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableVirtualChassis) GetMemberCountOk() (*int32, bool) {
	if o == nil || o.MemberCount == nil {
		return nil, false
	}
	return o.MemberCount, true
}

// HasMemberCount returns a boolean if a field has been set.
func (o *WritableVirtualChassis) HasMemberCount() bool {
	if o != nil && o.MemberCount != nil {
		return true
	}

	return false
}

// SetMemberCount gets a reference to the given int32 and assigns it to the MemberCount field.
func (o *WritableVirtualChassis) SetMemberCount(v int32) {
	o.MemberCount = &v
}

func (o WritableVirtualChassis) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Display != nil {
		toSerialize["display"] = o.Display
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Domain != nil {
		toSerialize["domain"] = o.Domain
	}
	if o.Master.IsSet() {
		toSerialize["master"] = o.Master.Get()
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if o.MemberCount != nil {
		toSerialize["member_count"] = o.MemberCount
	}
	return json.Marshal(toSerialize)
}

type NullableWritableVirtualChassis struct {
	value *WritableVirtualChassis
	isSet bool
}

func (v NullableWritableVirtualChassis) Get() *WritableVirtualChassis {
	return v.value
}

func (v *NullableWritableVirtualChassis) Set(val *WritableVirtualChassis) {
	v.value = val
	v.isSet = true
}

func (v NullableWritableVirtualChassis) IsSet() bool {
	return v.isSet
}

func (v *NullableWritableVirtualChassis) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWritableVirtualChassis(val *WritableVirtualChassis) *NullableWritableVirtualChassis {
	return &NullableWritableVirtualChassis{value: val, isSet: true}
}

func (v NullableWritableVirtualChassis) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWritableVirtualChassis) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


