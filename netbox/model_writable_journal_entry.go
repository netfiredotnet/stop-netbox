/*
NetBox API

API to access NetBox

API version: 2.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"time"
)

// WritableJournalEntry struct for WritableJournalEntry
type WritableJournalEntry struct {
	Id *int32 `json:"id,omitempty"`
	Url *string `json:"url,omitempty"`
	Display *string `json:"display,omitempty"`
	AssignedObjectType string `json:"assigned_object_type"`
	AssignedObjectId int32 `json:"assigned_object_id"`
	AssignedObject *map[string]string `json:"assigned_object,omitempty"`
	Created *time.Time `json:"created,omitempty"`
	CreatedBy NullableInt32 `json:"created_by,omitempty"`
	Kind *string `json:"kind,omitempty"`
	Comments string `json:"comments"`
}

// NewWritableJournalEntry instantiates a new WritableJournalEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWritableJournalEntry(assignedObjectType string, assignedObjectId int32, comments string) *WritableJournalEntry {
	this := WritableJournalEntry{}
	this.AssignedObjectType = assignedObjectType
	this.AssignedObjectId = assignedObjectId
	this.Comments = comments
	return &this
}

// NewWritableJournalEntryWithDefaults instantiates a new WritableJournalEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWritableJournalEntryWithDefaults() *WritableJournalEntry {
	this := WritableJournalEntry{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WritableJournalEntry) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableJournalEntry) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WritableJournalEntry) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *WritableJournalEntry) SetId(v int32) {
	o.Id = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *WritableJournalEntry) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableJournalEntry) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *WritableJournalEntry) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *WritableJournalEntry) SetUrl(v string) {
	o.Url = &v
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *WritableJournalEntry) GetDisplay() string {
	if o == nil || o.Display == nil {
		var ret string
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableJournalEntry) GetDisplayOk() (*string, bool) {
	if o == nil || o.Display == nil {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *WritableJournalEntry) HasDisplay() bool {
	if o != nil && o.Display != nil {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given string and assigns it to the Display field.
func (o *WritableJournalEntry) SetDisplay(v string) {
	o.Display = &v
}

// GetAssignedObjectType returns the AssignedObjectType field value
func (o *WritableJournalEntry) GetAssignedObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssignedObjectType
}

// GetAssignedObjectTypeOk returns a tuple with the AssignedObjectType field value
// and a boolean to check if the value has been set.
func (o *WritableJournalEntry) GetAssignedObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssignedObjectType, true
}

// SetAssignedObjectType sets field value
func (o *WritableJournalEntry) SetAssignedObjectType(v string) {
	o.AssignedObjectType = v
}

// GetAssignedObjectId returns the AssignedObjectId field value
func (o *WritableJournalEntry) GetAssignedObjectId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AssignedObjectId
}

// GetAssignedObjectIdOk returns a tuple with the AssignedObjectId field value
// and a boolean to check if the value has been set.
func (o *WritableJournalEntry) GetAssignedObjectIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssignedObjectId, true
}

// SetAssignedObjectId sets field value
func (o *WritableJournalEntry) SetAssignedObjectId(v int32) {
	o.AssignedObjectId = v
}

// GetAssignedObject returns the AssignedObject field value if set, zero value otherwise.
func (o *WritableJournalEntry) GetAssignedObject() map[string]string {
	if o == nil || o.AssignedObject == nil {
		var ret map[string]string
		return ret
	}
	return *o.AssignedObject
}

// GetAssignedObjectOk returns a tuple with the AssignedObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableJournalEntry) GetAssignedObjectOk() (*map[string]string, bool) {
	if o == nil || o.AssignedObject == nil {
		return nil, false
	}
	return o.AssignedObject, true
}

// HasAssignedObject returns a boolean if a field has been set.
func (o *WritableJournalEntry) HasAssignedObject() bool {
	if o != nil && o.AssignedObject != nil {
		return true
	}

	return false
}

// SetAssignedObject gets a reference to the given map[string]string and assigns it to the AssignedObject field.
func (o *WritableJournalEntry) SetAssignedObject(v map[string]string) {
	o.AssignedObject = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *WritableJournalEntry) GetCreated() time.Time {
	if o == nil || o.Created == nil {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableJournalEntry) GetCreatedOk() (*time.Time, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *WritableJournalEntry) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *WritableJournalEntry) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WritableJournalEntry) GetCreatedBy() int32 {
	if o == nil || o.CreatedBy.Get() == nil {
		var ret int32
		return ret
	}
	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WritableJournalEntry) GetCreatedByOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *WritableJournalEntry) HasCreatedBy() bool {
	if o != nil && o.CreatedBy.IsSet() {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given NullableInt32 and assigns it to the CreatedBy field.
func (o *WritableJournalEntry) SetCreatedBy(v int32) {
	o.CreatedBy.Set(&v)
}
// SetCreatedByNil sets the value for CreatedBy to be an explicit nil
func (o *WritableJournalEntry) SetCreatedByNil() {
	o.CreatedBy.Set(nil)
}

// UnsetCreatedBy ensures that no value is present for CreatedBy, not even an explicit nil
func (o *WritableJournalEntry) UnsetCreatedBy() {
	o.CreatedBy.Unset()
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *WritableJournalEntry) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WritableJournalEntry) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *WritableJournalEntry) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *WritableJournalEntry) SetKind(v string) {
	o.Kind = &v
}

// GetComments returns the Comments field value
func (o *WritableJournalEntry) GetComments() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value
// and a boolean to check if the value has been set.
func (o *WritableJournalEntry) GetCommentsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Comments, true
}

// SetComments sets field value
func (o *WritableJournalEntry) SetComments(v string) {
	o.Comments = v
}

func (o WritableJournalEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Display != nil {
		toSerialize["display"] = o.Display
	}
	if true {
		toSerialize["assigned_object_type"] = o.AssignedObjectType
	}
	if true {
		toSerialize["assigned_object_id"] = o.AssignedObjectId
	}
	if o.AssignedObject != nil {
		toSerialize["assigned_object"] = o.AssignedObject
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.CreatedBy.IsSet() {
		toSerialize["created_by"] = o.CreatedBy.Get()
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["comments"] = o.Comments
	}
	return json.Marshal(toSerialize)
}

type NullableWritableJournalEntry struct {
	value *WritableJournalEntry
	isSet bool
}

func (v NullableWritableJournalEntry) Get() *WritableJournalEntry {
	return v.value
}

func (v *NullableWritableJournalEntry) Set(val *WritableJournalEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableWritableJournalEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableWritableJournalEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWritableJournalEntry(val *WritableJournalEntry) *NullableWritableJournalEntry {
	return &NullableWritableJournalEntry{value: val, isSet: true}
}

func (v NullableWritableJournalEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWritableJournalEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


