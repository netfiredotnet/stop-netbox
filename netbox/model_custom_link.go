/*
NetBox API

API to access NetBox

API version: 2.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
)

// CustomLink struct for CustomLink
type CustomLink struct {
	Id *int32 `json:"id,omitempty"`
	Url *string `json:"url,omitempty"`
	Display *string `json:"display,omitempty"`
	ContentType string `json:"content_type"`
	Name string `json:"name"`
	// Jinja2 template code for link text
	LinkText string `json:"link_text"`
	// Jinja2 template code for link URL
	LinkUrl string `json:"link_url"`
	Weight *int32 `json:"weight,omitempty"`
	// Links with the same group will appear as a dropdown menu
	GroupName *string `json:"group_name,omitempty"`
	// The class of the first link in a group will be used for the dropdown button
	ButtonClass *string `json:"button_class,omitempty"`
	// Force link to open in a new window
	NewWindow *bool `json:"new_window,omitempty"`
}

// NewCustomLink instantiates a new CustomLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomLink(contentType string, name string, linkText string, linkUrl string) *CustomLink {
	this := CustomLink{}
	this.ContentType = contentType
	this.Name = name
	this.LinkText = linkText
	this.LinkUrl = linkUrl
	return &this
}

// NewCustomLinkWithDefaults instantiates a new CustomLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomLinkWithDefaults() *CustomLink {
	this := CustomLink{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustomLink) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomLink) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustomLink) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CustomLink) SetId(v int32) {
	o.Id = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *CustomLink) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomLink) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *CustomLink) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *CustomLink) SetUrl(v string) {
	o.Url = &v
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *CustomLink) GetDisplay() string {
	if o == nil || o.Display == nil {
		var ret string
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomLink) GetDisplayOk() (*string, bool) {
	if o == nil || o.Display == nil {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *CustomLink) HasDisplay() bool {
	if o != nil && o.Display != nil {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given string and assigns it to the Display field.
func (o *CustomLink) SetDisplay(v string) {
	o.Display = &v
}

// GetContentType returns the ContentType field value
func (o *CustomLink) GetContentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value
// and a boolean to check if the value has been set.
func (o *CustomLink) GetContentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContentType, true
}

// SetContentType sets field value
func (o *CustomLink) SetContentType(v string) {
	o.ContentType = v
}

// GetName returns the Name field value
func (o *CustomLink) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CustomLink) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CustomLink) SetName(v string) {
	o.Name = v
}

// GetLinkText returns the LinkText field value
func (o *CustomLink) GetLinkText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LinkText
}

// GetLinkTextOk returns a tuple with the LinkText field value
// and a boolean to check if the value has been set.
func (o *CustomLink) GetLinkTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LinkText, true
}

// SetLinkText sets field value
func (o *CustomLink) SetLinkText(v string) {
	o.LinkText = v
}

// GetLinkUrl returns the LinkUrl field value
func (o *CustomLink) GetLinkUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LinkUrl
}

// GetLinkUrlOk returns a tuple with the LinkUrl field value
// and a boolean to check if the value has been set.
func (o *CustomLink) GetLinkUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LinkUrl, true
}

// SetLinkUrl sets field value
func (o *CustomLink) SetLinkUrl(v string) {
	o.LinkUrl = v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *CustomLink) GetWeight() int32 {
	if o == nil || o.Weight == nil {
		var ret int32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomLink) GetWeightOk() (*int32, bool) {
	if o == nil || o.Weight == nil {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *CustomLink) HasWeight() bool {
	if o != nil && o.Weight != nil {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int32 and assigns it to the Weight field.
func (o *CustomLink) SetWeight(v int32) {
	o.Weight = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *CustomLink) GetGroupName() string {
	if o == nil || o.GroupName == nil {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomLink) GetGroupNameOk() (*string, bool) {
	if o == nil || o.GroupName == nil {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *CustomLink) HasGroupName() bool {
	if o != nil && o.GroupName != nil {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *CustomLink) SetGroupName(v string) {
	o.GroupName = &v
}

// GetButtonClass returns the ButtonClass field value if set, zero value otherwise.
func (o *CustomLink) GetButtonClass() string {
	if o == nil || o.ButtonClass == nil {
		var ret string
		return ret
	}
	return *o.ButtonClass
}

// GetButtonClassOk returns a tuple with the ButtonClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomLink) GetButtonClassOk() (*string, bool) {
	if o == nil || o.ButtonClass == nil {
		return nil, false
	}
	return o.ButtonClass, true
}

// HasButtonClass returns a boolean if a field has been set.
func (o *CustomLink) HasButtonClass() bool {
	if o != nil && o.ButtonClass != nil {
		return true
	}

	return false
}

// SetButtonClass gets a reference to the given string and assigns it to the ButtonClass field.
func (o *CustomLink) SetButtonClass(v string) {
	o.ButtonClass = &v
}

// GetNewWindow returns the NewWindow field value if set, zero value otherwise.
func (o *CustomLink) GetNewWindow() bool {
	if o == nil || o.NewWindow == nil {
		var ret bool
		return ret
	}
	return *o.NewWindow
}

// GetNewWindowOk returns a tuple with the NewWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomLink) GetNewWindowOk() (*bool, bool) {
	if o == nil || o.NewWindow == nil {
		return nil, false
	}
	return o.NewWindow, true
}

// HasNewWindow returns a boolean if a field has been set.
func (o *CustomLink) HasNewWindow() bool {
	if o != nil && o.NewWindow != nil {
		return true
	}

	return false
}

// SetNewWindow gets a reference to the given bool and assigns it to the NewWindow field.
func (o *CustomLink) SetNewWindow(v bool) {
	o.NewWindow = &v
}

func (o CustomLink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Display != nil {
		toSerialize["display"] = o.Display
	}
	if true {
		toSerialize["content_type"] = o.ContentType
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["link_text"] = o.LinkText
	}
	if true {
		toSerialize["link_url"] = o.LinkUrl
	}
	if o.Weight != nil {
		toSerialize["weight"] = o.Weight
	}
	if o.GroupName != nil {
		toSerialize["group_name"] = o.GroupName
	}
	if o.ButtonClass != nil {
		toSerialize["button_class"] = o.ButtonClass
	}
	if o.NewWindow != nil {
		toSerialize["new_window"] = o.NewWindow
	}
	return json.Marshal(toSerialize)
}

type NullableCustomLink struct {
	value *CustomLink
	isSet bool
}

func (v NullableCustomLink) Get() *CustomLink {
	return v.value
}

func (v *NullableCustomLink) Set(val *CustomLink) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomLink) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomLink(val *CustomLink) *NullableCustomLink {
	return &NullableCustomLink{value: val, isSet: true}
}

func (v NullableCustomLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


