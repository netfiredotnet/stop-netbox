/*
NetBox API

API to access NetBox

API version: 2.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ConfigContext struct for ConfigContext
type ConfigContext struct {
	Id *int32 `json:"id,omitempty"`
	Url *string `json:"url,omitempty"`
	Display *string `json:"display,omitempty"`
	Name string `json:"name"`
	Weight *int32 `json:"weight,omitempty"`
	Description *string `json:"description,omitempty"`
	IsActive *bool `json:"is_active,omitempty"`
	Regions []NestedRegion `json:"regions,omitempty"`
	SiteGroups []NestedSiteGroup `json:"site_groups,omitempty"`
	Sites []NestedSite `json:"sites,omitempty"`
	DeviceTypes []NestedDeviceType `json:"device_types,omitempty"`
	Roles []NestedDeviceRole `json:"roles,omitempty"`
	Platforms []NestedPlatform `json:"platforms,omitempty"`
	ClusterGroups []NestedClusterGroup `json:"cluster_groups,omitempty"`
	Clusters []NestedCluster `json:"clusters,omitempty"`
	TenantGroups []NestedTenantGroup `json:"tenant_groups,omitempty"`
	Tenants []NestedTenant `json:"tenants,omitempty"`
	Tags []string `json:"tags,omitempty"`
	Data string `json:"data"`
	Created *string `json:"created,omitempty"`
	LastUpdated *time.Time `json:"last_updated,omitempty"`
}

// NewConfigContext instantiates a new ConfigContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigContext(name string, data string) *ConfigContext {
	this := ConfigContext{}
	this.Name = name
	this.Data = data
	return &this
}

// NewConfigContextWithDefaults instantiates a new ConfigContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigContextWithDefaults() *ConfigContext {
	this := ConfigContext{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ConfigContext) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ConfigContext) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ConfigContext) SetId(v int32) {
	o.Id = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ConfigContext) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ConfigContext) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ConfigContext) SetUrl(v string) {
	o.Url = &v
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *ConfigContext) GetDisplay() string {
	if o == nil || o.Display == nil {
		var ret string
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetDisplayOk() (*string, bool) {
	if o == nil || o.Display == nil {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *ConfigContext) HasDisplay() bool {
	if o != nil && o.Display != nil {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given string and assigns it to the Display field.
func (o *ConfigContext) SetDisplay(v string) {
	o.Display = &v
}

// GetName returns the Name field value
func (o *ConfigContext) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ConfigContext) SetName(v string) {
	o.Name = v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *ConfigContext) GetWeight() int32 {
	if o == nil || o.Weight == nil {
		var ret int32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetWeightOk() (*int32, bool) {
	if o == nil || o.Weight == nil {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *ConfigContext) HasWeight() bool {
	if o != nil && o.Weight != nil {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int32 and assigns it to the Weight field.
func (o *ConfigContext) SetWeight(v int32) {
	o.Weight = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ConfigContext) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ConfigContext) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ConfigContext) SetDescription(v string) {
	o.Description = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *ConfigContext) GetIsActive() bool {
	if o == nil || o.IsActive == nil {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetIsActiveOk() (*bool, bool) {
	if o == nil || o.IsActive == nil {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *ConfigContext) HasIsActive() bool {
	if o != nil && o.IsActive != nil {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *ConfigContext) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetRegions returns the Regions field value if set, zero value otherwise.
func (o *ConfigContext) GetRegions() []NestedRegion {
	if o == nil || o.Regions == nil {
		var ret []NestedRegion
		return ret
	}
	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetRegionsOk() ([]NestedRegion, bool) {
	if o == nil || o.Regions == nil {
		return nil, false
	}
	return o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *ConfigContext) HasRegions() bool {
	if o != nil && o.Regions != nil {
		return true
	}

	return false
}

// SetRegions gets a reference to the given []NestedRegion and assigns it to the Regions field.
func (o *ConfigContext) SetRegions(v []NestedRegion) {
	o.Regions = v
}

// GetSiteGroups returns the SiteGroups field value if set, zero value otherwise.
func (o *ConfigContext) GetSiteGroups() []NestedSiteGroup {
	if o == nil || o.SiteGroups == nil {
		var ret []NestedSiteGroup
		return ret
	}
	return o.SiteGroups
}

// GetSiteGroupsOk returns a tuple with the SiteGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetSiteGroupsOk() ([]NestedSiteGroup, bool) {
	if o == nil || o.SiteGroups == nil {
		return nil, false
	}
	return o.SiteGroups, true
}

// HasSiteGroups returns a boolean if a field has been set.
func (o *ConfigContext) HasSiteGroups() bool {
	if o != nil && o.SiteGroups != nil {
		return true
	}

	return false
}

// SetSiteGroups gets a reference to the given []NestedSiteGroup and assigns it to the SiteGroups field.
func (o *ConfigContext) SetSiteGroups(v []NestedSiteGroup) {
	o.SiteGroups = v
}

// GetSites returns the Sites field value if set, zero value otherwise.
func (o *ConfigContext) GetSites() []NestedSite {
	if o == nil || o.Sites == nil {
		var ret []NestedSite
		return ret
	}
	return o.Sites
}

// GetSitesOk returns a tuple with the Sites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetSitesOk() ([]NestedSite, bool) {
	if o == nil || o.Sites == nil {
		return nil, false
	}
	return o.Sites, true
}

// HasSites returns a boolean if a field has been set.
func (o *ConfigContext) HasSites() bool {
	if o != nil && o.Sites != nil {
		return true
	}

	return false
}

// SetSites gets a reference to the given []NestedSite and assigns it to the Sites field.
func (o *ConfigContext) SetSites(v []NestedSite) {
	o.Sites = v
}

// GetDeviceTypes returns the DeviceTypes field value if set, zero value otherwise.
func (o *ConfigContext) GetDeviceTypes() []NestedDeviceType {
	if o == nil || o.DeviceTypes == nil {
		var ret []NestedDeviceType
		return ret
	}
	return o.DeviceTypes
}

// GetDeviceTypesOk returns a tuple with the DeviceTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetDeviceTypesOk() ([]NestedDeviceType, bool) {
	if o == nil || o.DeviceTypes == nil {
		return nil, false
	}
	return o.DeviceTypes, true
}

// HasDeviceTypes returns a boolean if a field has been set.
func (o *ConfigContext) HasDeviceTypes() bool {
	if o != nil && o.DeviceTypes != nil {
		return true
	}

	return false
}

// SetDeviceTypes gets a reference to the given []NestedDeviceType and assigns it to the DeviceTypes field.
func (o *ConfigContext) SetDeviceTypes(v []NestedDeviceType) {
	o.DeviceTypes = v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *ConfigContext) GetRoles() []NestedDeviceRole {
	if o == nil || o.Roles == nil {
		var ret []NestedDeviceRole
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetRolesOk() ([]NestedDeviceRole, bool) {
	if o == nil || o.Roles == nil {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *ConfigContext) HasRoles() bool {
	if o != nil && o.Roles != nil {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []NestedDeviceRole and assigns it to the Roles field.
func (o *ConfigContext) SetRoles(v []NestedDeviceRole) {
	o.Roles = v
}

// GetPlatforms returns the Platforms field value if set, zero value otherwise.
func (o *ConfigContext) GetPlatforms() []NestedPlatform {
	if o == nil || o.Platforms == nil {
		var ret []NestedPlatform
		return ret
	}
	return o.Platforms
}

// GetPlatformsOk returns a tuple with the Platforms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetPlatformsOk() ([]NestedPlatform, bool) {
	if o == nil || o.Platforms == nil {
		return nil, false
	}
	return o.Platforms, true
}

// HasPlatforms returns a boolean if a field has been set.
func (o *ConfigContext) HasPlatforms() bool {
	if o != nil && o.Platforms != nil {
		return true
	}

	return false
}

// SetPlatforms gets a reference to the given []NestedPlatform and assigns it to the Platforms field.
func (o *ConfigContext) SetPlatforms(v []NestedPlatform) {
	o.Platforms = v
}

// GetClusterGroups returns the ClusterGroups field value if set, zero value otherwise.
func (o *ConfigContext) GetClusterGroups() []NestedClusterGroup {
	if o == nil || o.ClusterGroups == nil {
		var ret []NestedClusterGroup
		return ret
	}
	return o.ClusterGroups
}

// GetClusterGroupsOk returns a tuple with the ClusterGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetClusterGroupsOk() ([]NestedClusterGroup, bool) {
	if o == nil || o.ClusterGroups == nil {
		return nil, false
	}
	return o.ClusterGroups, true
}

// HasClusterGroups returns a boolean if a field has been set.
func (o *ConfigContext) HasClusterGroups() bool {
	if o != nil && o.ClusterGroups != nil {
		return true
	}

	return false
}

// SetClusterGroups gets a reference to the given []NestedClusterGroup and assigns it to the ClusterGroups field.
func (o *ConfigContext) SetClusterGroups(v []NestedClusterGroup) {
	o.ClusterGroups = v
}

// GetClusters returns the Clusters field value if set, zero value otherwise.
func (o *ConfigContext) GetClusters() []NestedCluster {
	if o == nil || o.Clusters == nil {
		var ret []NestedCluster
		return ret
	}
	return o.Clusters
}

// GetClustersOk returns a tuple with the Clusters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetClustersOk() ([]NestedCluster, bool) {
	if o == nil || o.Clusters == nil {
		return nil, false
	}
	return o.Clusters, true
}

// HasClusters returns a boolean if a field has been set.
func (o *ConfigContext) HasClusters() bool {
	if o != nil && o.Clusters != nil {
		return true
	}

	return false
}

// SetClusters gets a reference to the given []NestedCluster and assigns it to the Clusters field.
func (o *ConfigContext) SetClusters(v []NestedCluster) {
	o.Clusters = v
}

// GetTenantGroups returns the TenantGroups field value if set, zero value otherwise.
func (o *ConfigContext) GetTenantGroups() []NestedTenantGroup {
	if o == nil || o.TenantGroups == nil {
		var ret []NestedTenantGroup
		return ret
	}
	return o.TenantGroups
}

// GetTenantGroupsOk returns a tuple with the TenantGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetTenantGroupsOk() ([]NestedTenantGroup, bool) {
	if o == nil || o.TenantGroups == nil {
		return nil, false
	}
	return o.TenantGroups, true
}

// HasTenantGroups returns a boolean if a field has been set.
func (o *ConfigContext) HasTenantGroups() bool {
	if o != nil && o.TenantGroups != nil {
		return true
	}

	return false
}

// SetTenantGroups gets a reference to the given []NestedTenantGroup and assigns it to the TenantGroups field.
func (o *ConfigContext) SetTenantGroups(v []NestedTenantGroup) {
	o.TenantGroups = v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *ConfigContext) GetTenants() []NestedTenant {
	if o == nil || o.Tenants == nil {
		var ret []NestedTenant
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetTenantsOk() ([]NestedTenant, bool) {
	if o == nil || o.Tenants == nil {
		return nil, false
	}
	return o.Tenants, true
}

// HasTenants returns a boolean if a field has been set.
func (o *ConfigContext) HasTenants() bool {
	if o != nil && o.Tenants != nil {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []NestedTenant and assigns it to the Tenants field.
func (o *ConfigContext) SetTenants(v []NestedTenant) {
	o.Tenants = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ConfigContext) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ConfigContext) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ConfigContext) SetTags(v []string) {
	o.Tags = v
}

// GetData returns the Data field value
func (o *ConfigContext) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *ConfigContext) SetData(v string) {
	o.Data = v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ConfigContext) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetCreatedOk() (*string, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ConfigContext) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *ConfigContext) SetCreated(v string) {
	o.Created = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ConfigContext) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContext) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *ConfigContext) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *ConfigContext) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

func (o ConfigContext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Display != nil {
		toSerialize["display"] = o.Display
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Weight != nil {
		toSerialize["weight"] = o.Weight
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.IsActive != nil {
		toSerialize["is_active"] = o.IsActive
	}
	if o.Regions != nil {
		toSerialize["regions"] = o.Regions
	}
	if o.SiteGroups != nil {
		toSerialize["site_groups"] = o.SiteGroups
	}
	if o.Sites != nil {
		toSerialize["sites"] = o.Sites
	}
	if o.DeviceTypes != nil {
		toSerialize["device_types"] = o.DeviceTypes
	}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	if o.Platforms != nil {
		toSerialize["platforms"] = o.Platforms
	}
	if o.ClusterGroups != nil {
		toSerialize["cluster_groups"] = o.ClusterGroups
	}
	if o.Clusters != nil {
		toSerialize["clusters"] = o.Clusters
	}
	if o.TenantGroups != nil {
		toSerialize["tenant_groups"] = o.TenantGroups
	}
	if o.Tenants != nil {
		toSerialize["tenants"] = o.Tenants
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if true {
		toSerialize["data"] = o.Data
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.LastUpdated != nil {
		toSerialize["last_updated"] = o.LastUpdated
	}
	return json.Marshal(toSerialize)
}

type NullableConfigContext struct {
	value *ConfigContext
	isSet bool
}

func (v NullableConfigContext) Get() *ConfigContext {
	return v.value
}

func (v *NullableConfigContext) Set(val *ConfigContext) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigContext) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigContext(val *ConfigContext) *NullableConfigContext {
	return &NullableConfigContext{value: val, isSet: true}
}

func (v NullableConfigContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


